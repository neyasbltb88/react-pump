{"version":3,"sources":["services/rand.js","services/random-name.js","services/worker-handler.js","services/throttle.js","services/position-watcher.js","services/build-window-params.js","components/btn/index.js","components/btn/btn.js","pages/main/main.js","hocs/compose.js","hocs/with-message-handler.js","hocs/with-position-watcher.js","hocs/with-resize.js","hocs/with-compute-collision.js","pages/main/index.js","components/pump-handle/index.js","components/pump-handle/pump-handle.js","pages/pumping/pumping.js","pages/pumping/index.js","pages/pumped/pumped.js","pages/pumped/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["rand","min","max","Math","floor","random","randomName","length","name","i","String","fromCharCode","workerHandler","worker","handlers","message","type","data","port","postMessage","JSON","stringify","handler","e","parse","console","log","alert","typeHandler","err","this","addEventListener","start","makeTrottle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","apply","setTimeout","throttle","positionWatcher","callback","position","top","window","screenY","right","screenX","outerWidth","bottom","outerHeight","left","comparePosition","cb","lastPosition","autoUpdate","raf","requestAnimationFrame","Object","keys","some","pos","cancelAnimationFrame","buildWindowParams","params","resizable","location","status","scrollbars","toolbar","menubar","reduce","res","paramName","slice","Btn","props","onClick","label","disabled","dense","children","color","className","rest","content","title","_className","trim","style","Main","messageHandler","onChangePumpingConnected","state","opened","pumpingParams","width","height","screen","availWidth","pumpingWidth","availHeight","pumpingHeight","open","setState","value","Component","compose","funcs","Comp","reduceRight","prevRes","fun","workerHandlerMaker","SharedWorker","withMessageHandler","withPositionWatcher","target","posWatcher","onPosition","stop","withResize","runResize","need","smoothResize","delta","resizeBy","moveBy","comp","createRef","ratio","current","plagged","onPumpDown","ref","withComputeCollision","connectedSide","Pumping","Pumpeds","Map","Plugged","onPositionUpdate","onDisconnectedPumped","onCheckStatusPumped","plugged","has","get","collisionCalc","sides","set","forEach","pumped","vertical","horizontal","side","onPlug","onUnplug","delete","PumpHandle","lastDragPosition","onMouseDown","document","onMouseMove","onMouseUp","once","handleResize","removeEventListener","src","alt","draggable","onPump","autoOpenPumpeds","lastTitle","pumpedSize","autoOpen","pumpRatio","onClose","closeAllPumpeds","openPumped","REACT_APP_DEPLOY_FOLDER","process","DEPLOY_FOLDER","winParams","openedCnt","msg","abs","connecters","map","key","size","Pumped","close","onChangePlug","xmlns","viewBox","version","fill","transform","d","App","basename","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fc0393d8.chunk.js","sourcesContent":["const rand = (min, max) => {\r\n    let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n    return rand;\r\n}\r\n\r\nexport default rand;","import rand from './rand'\r\n\r\nconst randomName = (length = 10) => {\r\n    let name = '';\r\n    for (let i = 0; i < length; i++) {\r\n        name += String.fromCharCode(rand(97, 122));\r\n    }\r\n\r\n    return name;\r\n}\r\n\r\nexport default randomName;","export default class workerHandler {\r\n    constructor(worker, handlers) {\r\n        this.worker = worker;\r\n        this.handlers = handlers;\r\n\r\n        this.worker.port.addEventListener('message', this.handler, false);\r\n        this.worker.port.start();\r\n    }\r\n\r\n    message = (type, data) => {\r\n        this.worker.port.postMessage(JSON.stringify({ type, data }));\r\n    }\r\n\r\n    handler = (e) => {\r\n        try {\r\n            let { type, data } = JSON.parse(e.data);\r\n            if(type !== 'position:update') {\r\n                // console.log(type, data);\r\n            }\r\n\r\n            if(type === 'worker:error') {\r\n                console.log('%c%s', 'color: #272822;background-color: #F92672;padding: 2px 10px;', type, data);\r\n                alert(`${type} - ${data}`);\r\n            }\r\n\r\n            let typeHandler = this.handlers[type];\r\n            if(typeHandler) {\r\n                // console.log(type, data);\r\n                typeHandler(data);\r\n            }\r\n        } catch(err) { console.log(err) }\r\n    }\r\n}","function throttle(func, ms) {\r\n    let isThrottled = false,\r\n        savedArgs,\r\n        savedThis;\r\n\r\n    function wrapper() {\r\n        if (isThrottled) {\r\n            savedArgs = arguments;\r\n            savedThis = this;\r\n            return;\r\n        }\r\n\r\n        func.apply(this, arguments);\r\n        isThrottled = true;\r\n\r\n        setTimeout(function() {\r\n            isThrottled = false;\r\n            if (savedArgs) {\r\n                wrapper.apply(savedThis, savedArgs);\r\n                savedArgs = savedThis = null;\r\n            }\r\n        }, ms);\r\n    }\r\n\r\n    return wrapper;\r\n}\r\n\r\nconst makeTrottle = (func, ms) => throttle(func, ms);\r\n\r\nexport default makeTrottle;","import throttle from './throttle';\r\n\r\nexport default class positionWatcher {\r\n    constructor(callback = () => {}) {\r\n        this.cb = callback;\r\n        this.handler = throttle(this.handler, 50);\r\n        this.lastPosition = {\r\n            top: null,\r\n            right: null,\r\n            bottom: null,\r\n            left: null\r\n        };\r\n\r\n        this.raf = null;\r\n        this.autoUpdate = false;\r\n\r\n        this.start();\r\n    }\r\n\r\n    comparePosition(position) {\r\n        return Object.keys(position).some(pos => position[pos] !== this.lastPosition[pos]);\r\n    }\r\n\r\n    handler = () => {\r\n        let position = {\r\n            top: window.screenY,\r\n            right: window.screenX + window.outerWidth,\r\n            bottom: window.screenY + window.outerHeight,\r\n            left: window.screenX\r\n        };\r\n\r\n        if(this.comparePosition(position)) {\r\n            this.cb(position);\r\n            this.lastPosition = position;\r\n        }\r\n\r\n        if(this.autoUpdate) {\r\n            this.raf = window.requestAnimationFrame(() => this.handler());\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.autoUpdate = true;\r\n        this.handler();\r\n    }\r\n\r\n    stop() {\r\n        this.autoUpdate = false;\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}","const buildWindowParams = (params) => {\r\n    let defaultParams = {\r\n        resizable: 'yes',\r\n        location: 'no',\r\n        status: 'no',\r\n        scrollbars: 'no',\r\n        toolbar: 'no',\r\n        menubar: 'no',\r\n    };\r\n\r\n    return Object.keys({...defaultParams, ...params}).reduce((res, paramName) => `${res},${paramName}=${params[paramName]}`, '').slice(1);\r\n}\r\n\r\nexport default buildWindowParams;\r\n","import Btn from './btn';\r\n\r\nexport default Btn;","import React from 'react';\r\nimport './btn.css';\r\n\r\nconst Btn = (props) => {\r\n    const { onClick, label, disabled, dense, children, color, className = '', ...rest } = props;\r\n    let content = children ? children : label;\r\n    let title = (children && label) ? label : '';\r\n    let _className = `${dense ? 'Btn-dense' : 'Btn'} ${className}`.trim();\r\n    let style = {\r\n        '--primary': color\r\n    }\r\n\r\n    return <button style={color ? style : {}} className={_className} onClick={onClick} disabled={disabled} title={title} {...rest} >{content}</button>\r\n}\r\n\r\nexport default Btn;","import React, { Component } from 'react';\r\nimport { buildWindowParams } from '../../services';\r\n\r\nimport Btn from '../../components/btn';\r\n\r\nimport './main.css';\r\n\r\nexport default class Main extends Component {\r\n\r\n    messageHandler = this.props.messageHandler({\r\n        'pumping:connected': () => this.onChangePumpingConnected(true),\r\n        'pumping:disconnected': () => this.onChangePumpingConnected(false),\r\n        'status:pumping': (data) => this.onChangePumpingConnected(data)\r\n    });\r\n\r\n    state = {\r\n        opened: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.messageHandler.message('checkStatus:pumping');\r\n    }\r\n\r\n    onChangePumpingConnected(value) {\r\n        this.setState({ opened: value });\r\n    }\r\n\r\n    onClick = () => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n\r\n        let pumpingWidth = 300;\r\n        let pumpingHeight = 550;\r\n        let pumpingParams = buildWindowParams({\r\n                                width: pumpingWidth,\r\n                                height: pumpingHeight,\r\n                                left: ((window.screen.availWidth || window.screen.width) / 2 ) - (pumpingWidth / 2),\r\n                                top: ((window.screen.availHeight || window.screen.height) / 2 ) - (pumpingHeight / 2),\r\n                            });\r\n\r\n        window.open(`${DEPLOY_FOLDER}/pumping`, 'Pumping', pumpingParams);\r\n        this.setState({ opened: true });\r\n    }\r\n\r\n    render() {\r\n        const { open } = this.state\r\n        let label = open ? 'Насос запущен' : 'Запустить насос';\r\n\r\n        return (\r\n            <div className=\"Main\">\r\n                <Btn onClick={this.onClick} label={label} disabled={open} />\r\n            </div>\r\n        )\r\n    }\r\n}","const compose = (...funcs) => (Comp) => {\r\n    return funcs.reduceRight((prevRes, fun) => fun(prevRes), Comp);\r\n}\r\n\r\nexport default compose;","import React from 'react'\r\nimport { workerHandler } from '../services';\r\n\r\nconst workerHandlerMaker = (handlers = {}) => {\r\n    let worker = new SharedWorker('./services/worker.js');\r\n    return new workerHandler(worker, handlers);\r\n}\r\n\r\nconst withMessageHandler = (Comp) => {\r\n    return (props) => {\r\n        return <Comp messageHandler={workerHandlerMaker} {...props}/>\r\n    }\r\n}\r\n\r\nexport default withMessageHandler;","import React, { Component } from 'react';\r\nimport { positionWatcher } from '../services'\r\n\r\nconst withPositionWatcher = (Comp) => {\r\n    return class withPositionWatcher extends Component {\r\n\r\n        state = {\r\n            position: {},\r\n        }\r\n\r\n        messageHandler = this.props.messageHandler();\r\n\r\n        // Обработчик изменения положения/размеров\r\n        onPosition(position) {\r\n            this.setState({ position });\r\n            this.messageHandler.message('position:update', { target: window.name, position });\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.posWatcher = new positionWatcher(pos => this.onPosition(pos));\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.posWatcher && this.posWatcher.stop();\r\n        }\r\n\r\n        render() {\r\n            const { position } = this.state;\r\n\r\n            return <Comp position={position} {...this.props}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withPositionWatcher;","import React, { Component, createRef } from 'react';\r\n\r\nconst withResize = (Comp) => {\r\n    return class withResize extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.comp = createRef();\r\n\r\n            this.messageHandler = this.props.messageHandler({\r\n                'pump:down': ({delta, ratio}) => {\r\n                    if(this.comp.current.state.plagged) this.onPumpDown(delta, ratio);\r\n                },\r\n            });\r\n\r\n            this.state = {\r\n                delta: 0,\r\n                runResize: false,\r\n            }\r\n        }\r\n\r\n        runResize = (need) => {\r\n            requestAnimationFrame(() => this.smoothResize(need));\r\n        }\r\n    \r\n        smoothResize = (need) => {\r\n            let { delta, runResize } = this.state;\r\n    \r\n            // Если процесс плавного ресайза уже запущен \r\n            // и нет флага принудительного запуска, то выходим\r\n            if(runResize && !need) return;\r\n    \r\n            // За один вызов увеличение на 2px, а сдвиг на 1px\r\n            let step = 2;\r\n            let move = -step / 2;\r\n    \r\n            // Вычитаем шаг увеличения из буффера увеличения\r\n            delta = delta - step;\r\n    \r\n            window.resizeBy(step, step);\r\n            window.moveBy(move, move);\r\n    \r\n            // Если в буфере еще есть остаток, вызовем эту функцию еще раз\r\n            if(delta > 0) {\r\n                runResize = true;\r\n                this.runResize(true);\r\n    \r\n            // Если буфер увеличения закончился\r\n            } else {\r\n                delta = 0;\r\n                runResize = false;\r\n            }\r\n    \r\n            this.setState({\r\n                delta,\r\n                runResize\r\n            });\r\n        }\r\n\r\n        // Обработчик надувания\r\n        onPumpDown(delta, ratio = 1) {        \r\n            this.setState(state => {\r\n                // Пытается запустить плавный ресайз\r\n                // (если он уже идет, то эта попытка будет проигнорирована)\r\n                this.runResize();\r\n\r\n                // Обновляем значение буфера ресайза\r\n                return {\r\n                    delta: state.delta + ( delta / ratio)\r\n                }\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return <Comp ref={this.comp} { ...this.props }/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withResize;","import React, { Component } from 'react';\r\n\r\nconst withComputeCollision = (Comp) => {\r\n    return class withComputeCollision extends Component {\r\n\r\n        state = {\r\n            connectedSide: {\r\n                left: false,\r\n                right: false\r\n            },\r\n            Pumping: null, // Положение насоса\r\n            Pumpeds: new Map(), // Список шариков с их положениями\r\n            Plugged: new Map(), // Коллекция подключенных шариков\r\n        }\r\n\r\n        messageHandler = this.props.messageHandler({\r\n            'position:update': (data) => this.onPositionUpdate(data),\r\n            'pumped:disconnected': (data) => this.onDisconnectedPumped(data),\r\n            'checkStatus:pumped': (name) => this.onCheckStatusPumped(name),\r\n        });\r\n\r\n        // Обработчик запроса статуса подключения шарика\r\n        onCheckStatusPumped(name) {\r\n            let { Plugged } = this.state;\r\n            let plugged = Plugged.has(name) ? Plugged.get(name) : false;\r\n\r\n            this.messageHandler.message('status:pumped', { target: name, plugged });\r\n        }\r\n\r\n        // Обрабатывает изменение размеров/позиций насоса и шариков\r\n        onPositionUpdate(data) {\r\n            let { target, position } = data;\r\n\r\n            if(target === 'Pumping') {\r\n                this.setState({ Pumping: position });\r\n            }\r\n\r\n            this.collisionCalc(target, position);\r\n        }\r\n\r\n        // Рассчитывает столкновения(подключения) насоса и шариков\r\n        collisionCalc(target, position) {\r\n            let Pumping = null;\r\n            let Pumpeds = new Map([...this.state.Pumpeds]);\r\n            let sides = {\r\n                left: false,\r\n                right: false\r\n            }\r\n\r\n            // Если изменилось положение насоса\r\n            if(target === 'Pumping') {\r\n                // Запомним новое положение насоса\r\n                Pumping = position;\r\n\r\n            // Если изменилось положение шарика\r\n            } else {\r\n                // Получим положение насоса\r\n                Pumping = {...this.state.Pumping};\r\n                // Обновим изменившееся положение шарика\r\n                Pumpeds.set(target, position);\r\n            }\r\n\r\n            // Сверяем положение насоса с шариками\r\n            Pumpeds.forEach((pumped, name) => {\r\n                let vertical = false;\r\n                let horizontal = false;\r\n\r\n                if(Pumping.top <= pumped.bottom && Pumping.bottom >= pumped.top) { vertical = true; }\r\n                if(Pumping.left <= pumped.right && Pumping.right >= pumped.left) { horizontal = true; }\r\n\r\n                if(vertical && horizontal) {\r\n                    let pumpingCenter = ((Pumping.right - Pumping.left) / 2) + Pumping.left;\r\n                    let pumpedCenter = ((pumped.right - pumped.left) / 2) + pumped.left;\r\n\r\n                    let side = ( (pumpingCenter - pumpedCenter) > 0 ) ? 'left' : 'right';\r\n                    sides[side] = true;\r\n                    this.onPlug(name, side);\r\n                } else {\r\n                    this.onUnplug(name);\r\n                }\r\n            });\r\n\r\n            // Сохраним изменения положений\r\n            this.setState({\r\n                connectedSide: sides,\r\n                Pumping,\r\n                Pumpeds\r\n            });\r\n        }\r\n\r\n        // Подключает шарик к насосу\r\n        onPlug(name, side) {\r\n            side = ( side === 'left' ) ? 'right' : 'left';\r\n\r\n            this.setState(state => {\r\n                let Plugged = new Map([...state.Plugged]);\r\n\r\n                // Если шарик еще не был подключен, подключаем и уведомляем\r\n                if(!Plugged.has(name) || Plugged.get(name) !== side) {\r\n                    Plugged.set(name, side);\r\n                    this.messageHandler.message('pumped:plugged', {\r\n                        target: name,\r\n                        side\r\n                    });\r\n                } \r\n                \r\n                return { Plugged };\r\n            });\r\n        }\r\n\r\n        // Отключает шарик от насоса\r\n        onUnplug(name) {\r\n            this.setState(state => {\r\n                let Plugged = new Map([...state.Plugged]);\r\n\r\n                // Если delete вернет true, значит шарик был подключен, \r\n                // а теперь отключился, значит уведомляем\r\n                if(Plugged.delete(name)) {\r\n                    this.messageHandler.message('pumped:unplugged', name);\r\n                } \r\n                \r\n                return { Plugged };\r\n            });\r\n        }\r\n\r\n        // Обрабатывает дисконнект шарика\r\n        onDisconnectedPumped(data) {\r\n            let Pumpeds = new Map([...this.state.Pumpeds]);\r\n            let { Pumping } = this.state;\r\n\r\n            Pumpeds.delete(data);\r\n\r\n            this.setState({ Pumpeds });\r\n\r\n            this.onUnplug(data);\r\n            this.collisionCalc('Pumping', Pumping);\r\n        }\r\n\r\n        componentDidUpdate() {\r\n            if(!this.state.Pumping) {\r\n                this.setState({ Pumping: this.props.position });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { Pumpeds, connectedSide, Plugged } = this.state;\r\n\r\n            return <Comp Pumpeds={Pumpeds} connectedSide={connectedSide} Plugged={Plugged} {...this.props}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withComputeCollision;","import Main from './main';\r\nimport { withMessageHandler } from '../../hocs';\r\n\r\nexport default withMessageHandler(Main);","import PumpHandle from './pump-handle';\r\n\r\nexport default PumpHandle;","import React, { Component } from 'react';\r\n// import { throttle } from '../../services';\r\n\r\nimport './pump-handle.css';\r\n\r\nexport default class PumpHandle extends Component {\r\n\r\n    lastDragPosition = null;\r\n\r\n    componentDidMount() {\r\n        // this.onMouseMove = throttle(this.onMouseMove, 50);\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.lastDragPosition = e.screenY;\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        document.addEventListener('mouseup', this.onMouseUp, { once: true });\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        let delta = this.lastDragPosition - e.screenY;\r\n        this.props.handleResize(delta);\r\n        this.lastDragPosition = e.screenY;\r\n    }\r\n\r\n    onMouseUp = () => {\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"PumpHandle\">\r\n                <img onMouseDown={this.onMouseDown} src=\"./img/pump-handle.svg\" alt=\"pump-handle\" className=\"pump-handle-svg\" draggable=\"false\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { rand, randomName, buildWindowParams } from '../../services';\r\n\r\nimport Btn from '../../components/btn';\r\nimport PumpHandle from '../../components/pump-handle';\r\n\r\nimport './pumping.css';\r\n\r\nexport default class Pumping extends Component {\r\n\r\n    messageHandler = this.props.messageHandler({\r\n        'position:update': (data) => (data.target === 'Pumping') && this.onPump(data.position),\r\n        'pumped:connected': () => this.messageHandler.message('checkStatus:pumpeds'),\r\n        'status:pumpeds': (data) => this.autoOpenPumpeds(data),\r\n    });\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        pumpedSize: 300,\r\n        autoOpen: true,\r\n        pumpRatio: 10, // Делитель размеров надувания шариков\r\n        Pumping: null, // Положение насоса\r\n    }\r\n\r\n    // Обрабатывает закрытие окна насоса\r\n    onClose = () => {\r\n        this.closeAllPumpeds();\r\n        this.messageHandler.message('pumping:disconnected');\r\n    }\r\n\r\n    // Отправляет команду закрытия всех шариков\r\n    closeAllPumpeds = () => this.messageHandler.message('pumped:closeAll');\r\n\r\n    // Открывает новый шарик\r\n    openPumped = (params = {}) => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n\r\n        let { pumpedSize } = this.state;\r\n        let winParams = buildWindowParams({\r\n                            width: pumpedSize,\r\n                            height: pumpedSize,\r\n                            left: rand(0, (window.screen.availWidth || window.screen.width) - pumpedSize),\r\n                            top: rand(0, (window.screen.availHeight || window.screen.height) - pumpedSize),\r\n                            ...params\r\n                        });\r\n\r\n        window.open(`${DEPLOY_FOLDER}/pumped`, randomName(), winParams);\r\n    }\r\n\r\n    // Автоматически открывает 2 шарика слева и справа от насоса\r\n    autoOpenPumpeds(openedCnt) {\r\n        if(!this.state.autoOpen) return;\r\n\r\n        let { top, right, bottom, left } = this.props.position;\r\n        let { pumpedSize } = this.state;\r\n\r\n        let pumpedParams = [\r\n            { left: left - pumpedSize + 15, top: top + (bottom / 2) - (pumpedSize / 2) }, \r\n            { left: right - 15, top: top + (bottom / 2) - (pumpedSize / 2) }\r\n        ];\r\n\r\n        let params = pumpedParams[openedCnt];\r\n        if(params) {\r\n            this.openPumped(params);\r\n        } else {\r\n            this.setState({ autoOpen: false });\r\n        }\r\n    }\r\n\r\n    // Обработчик накачивания\r\n    onPump(position) {\r\n        let { Pumping, pumpRatio } = this.state;\r\n        let lastPumpHeight = Pumping.bottom - Pumping.top;\r\n        let height = position.bottom - position.top;\r\n        let delta = lastPumpHeight - height;\r\n\r\n        if(delta !== 0) {\r\n            let msg = (delta < 0) ? 'pump:up' : 'pump:down';\r\n\r\n            // Оповещаем о накачивании, передаем величину накачки и коэффициент\r\n            this.messageHandler.message(msg, {\r\n                delta: Math.abs(delta),\r\n                ratio: pumpRatio\r\n            });\r\n        }\r\n        \r\n        this.setState({ Pumping: {...position} });\r\n    }\r\n\r\n    // Изменяет высоту окна по команде перетаскивания ручки насоса\r\n    handleResize = (delta) => {\r\n        window.resizeBy(0, delta);\r\n        window.moveBy(0, -delta);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', this.onClose);\r\n        \r\n        // Оповещаем об открытии насоса\r\n        this.messageHandler.message('pumping:connected');\r\n\r\n        // Запрос количества открытых шариков\r\n        this.messageHandler.message('checkStatus:pumpeds');\r\n\r\n        let lastTitle = document.title;\r\n        document.title = 'Насос';\r\n        this.setState({ lastTitle });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.state.Pumping) {\r\n            this.setState({ Pumping: this.props.position });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        document.title = this.state.lastTitle; \r\n    }\r\n    \r\n    render() {\r\n        let { connectedSide, Pumpeds } = this.props;\r\n        let connecters = Object.keys(connectedSide).map(side => {\r\n            return connectedSide[side] ? \r\n                <img key={side} src={`./img/pump-tube-${side}.svg`} alt={`pump-tube-${side}`} className={`pump-tube pump-tube-${side}-svg`} draggable=\"false\"/> : null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"Pumping\">\r\n                <div className=\"btn-section\">\r\n                    <Btn onClick={() => this.openPumped()} label=\"Добавить шарик\" dense>\r\n                        <img src=\"./img/balloon-plus.svg\" alt=\"balloon-plus\" className=\"balloon-plus-svg\" draggable=\"false\" height=\"20\"/>\r\n                    </Btn>\r\n                    <Btn onClick={() => this.closeAllPumpeds()} label=\"Убрать все шарики\" color=\"#e91e63\" disabled={!Pumpeds.size} dense className=\"closeAllPumpeds\">\r\n                        <img src=\"./img/balloon-close.svg\" alt=\"balloon-close\" className=\"balloon-close-svg\" draggable=\"false\" height=\"20\"/>\r\n                        ({Pumpeds.size})\r\n                    </Btn>\r\n                </div>\r\n\r\n                <div className=\"pump\">\r\n                    <PumpHandle handleResize={this.handleResize}/>\r\n                    <div className=\"pump-plunger\">\r\n                        <img src=\"./img/pump-plunger.svg\" alt=\"pump-plunger\" className=\"pump-plunger-svg\" draggable=\"false\"/>\r\n                    </div>\r\n                    <div className=\"pump-body\">\r\n                        <img src=\"./img/pump-body.svg\" alt=\"pump-body\" className=\"pump-body-svg\" draggable=\"false\"/>\r\n                        {connecters}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumping from './pumping';\r\nimport { compose, withMessageHandler, withPositionWatcher, withComputeCollision } from '../../hocs';\r\n\r\nexport default compose(\r\n        withMessageHandler,\r\n        withPositionWatcher,\r\n        withComputeCollision,\r\n    )(Pumping);","import React, { Component } from 'react';\r\n\r\nimport './pumped.css';\r\n\r\nexport default class Pumped extends Component{\r\n\r\n    messageHandler = this.props.messageHandler({\r\n        'pumped:close': (name) => (window.name === name) && window.close(),\r\n        'pumped:closeAll': () => window.close(),\r\n        'pumped:plugged': (data) => (window.name === data.target) && this.onChangePlug(true, data.side),\r\n        'pumped:unplugged': (name) => (window.name === name) && this.onChangePlug(false),\r\n        'status:pumped': (data) => (window.name === data.target && data.plugged) && this.onChangePlug(true, data.side),\r\n    });\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        plagged: false,\r\n        side: '',\r\n    }\r\n\r\n    // Обработчик подключения/отключения шарика от насоса\r\n    onChangePlug(value, side = '') {\r\n        this.setState({ plagged: value, side });\r\n    }\r\n\r\n    // Обработчик закрытия шарика\r\n    onClose = () => {\r\n        this.messageHandler.message('pumped:disconnected', window.name);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastTitle = document.title;\r\n        document.title = 'Шарик';\r\n\r\n        window.addEventListener('beforeunload', this.onClose);\r\n        // Сообщаем о появлении нового шарика\r\n        this.messageHandler.message('pumped:connected', window.name);\r\n        // Запрашиваем статус подключения шарика к насосу\r\n        this.messageHandler.message('checkStatus:pumped', window.name);\r\n\r\n        this.setState({ lastTitle });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = this.state.lastTitle;\r\n    }\r\n\r\n    render() {\r\n        const { plagged } = this.state;\r\n        let color = plagged ? '#e91e63' : '#576d7e';\r\n\r\n        return (\r\n            <div className=\"Pumped\">\r\n                <svg className=\"baloon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"223\" height=\"300\" viewBox=\"0 0 222 300\" version=\"1.1\">\r\n                    <path fill={color} transform=\"matrix(0.02344759,0,0,-0.02344759,-0.03472868,300.11723)\" d=\"M 4430,12789 C 3509,12730 2661,12419 1950,11881 883,11074 192,9797 36,8345 -33,7704 2,6967 136,6240 328,5201 760,4156 1358,3285 1894,2504 2583,1846 3277,1451 c 140,-79 424,-214 558,-264 215,-80 439,-136 648,-162 60,-7 111,-16 115,-19 8,-9 -15,-237 -34,-326 -35,-167 -134,-411 -198,-487 -33,-40 -33,-73 2,-105 59,-57 173,-82 372,-83 213,0 331,25 393,83 36,34 34,62 -7,116 -114,150 -225,522 -226,758 0,54 -15,47 150,68 889,116 1919,814 2751,1865 480,607 892,1332 1182,2085 466,1210 624,2521 441,3659 -214,1337 -881,2491 -1874,3242 -876,663 -1971,982 -3120,908 z\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumped from './pumped';\r\nimport { compose, withMessageHandler, withPositionWatcher, withResize } from '../../hocs';\r\n\r\nexport default compose(\r\n        withMessageHandler,\r\n        withPositionWatcher,\r\n        withResize,\r\n    )(Pumped);","import App from './app'\r\n\r\nexport default App","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Main from '../../pages/main';\nimport Pumping from '../../pages/pumping';\nimport Pumped from '../../pages/pumped';\n\nimport './app.css';\n\nconst App = () => {\n    const { REACT_APP_DEPLOY_FOLDER } = process.env;\n    \n    return (\n        <div className=\"App\" >\n            <Router basename={REACT_APP_DEPLOY_FOLDER}>\n                <Route path={`/`} component={ Main } exact/>\n\n                <Route path={`/pumping`} component={ Pumping }/>\n\n                <Route path={`/pumped`} component={ Pumped }/>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render( <App / > , document.getElementById('root'));"],"sourceRoot":""}