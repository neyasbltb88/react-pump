{"version":3,"sources":["services/rand.js","services/random-name.js","services/worker-handler.js","services/throttle.js","services/position-watcher.js","components/btn/index.js","components/btn/btn.js","pages/main/index.js","pages/main/main.js","pages/pumping/index.js","pages/pumping/pumping.js","pages/pumped/index.js","pages/pumped/pumped.js","components/app/index.js","components/app/app.js","index.js"],"names":["rand","min","max","Math","floor","random","randomName","length","name","i","String","fromCharCode","workerHandler","worker","handlers","message","type","data","port","postMessage","JSON","stringify","handler","e","parse","console","log","typeHandler","err","this","addEventListener","start","makeTrottle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","apply","setTimeout","throttle","positionWatcher","callback","position","top","window","screenY","right","screenX","outerWidth","bottom","outerHeight","left","comparePosition","cb","lastPosition","autoUpdate","raf","requestAnimationFrame","diff","pos","cancelAnimationFrame","Btn","props","onClick","label","disabled","className","Main","SharedWorker","messageHandler","onPumpingOpen","onPumpingClose","state","opened","ready","setState","open","main_state","Component","Pumping","onChangePumped","posWatcher","lastTitle","Pumpeds","Map","Plugged","Set","openPumped","onClose","closeAllPumpeds","forEach","pumped","vertical","horizontal","add","delete","del","target","set","collisionCalc","pumping_state","document","title","onPosition","stop","posiSpans","Object","keys","map","key","plugged","plug","Pumped","close","App","basename","process","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e0ffec4.chunk.js","sourcesContent":["const rand = (min, max) => {\r\n    let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n    return rand;\r\n}\r\n\r\nexport default rand;","import rand from './rand'\r\n\r\nconst randomName = (length = 10) => {\r\n    let name = '';\r\n    for (let i = 0; i < length; i++) {\r\n        name += String.fromCharCode(rand(97, 122));\r\n    }\r\n\r\n    return name;\r\n}\r\n\r\nexport default randomName;","export default class workerHandler {\r\n    constructor(worker, handlers) {\r\n        this.worker = worker;\r\n        this.handlers = handlers;\r\n\r\n        this.worker.port.addEventListener('message', this.handler, false);\r\n        this.worker.port.start();\r\n    }\r\n\r\n    message = (type, data) => {\r\n        this.worker.port.postMessage(JSON.stringify({ type, data }));\r\n    }\r\n\r\n    handler = (e) => {\r\n        try {\r\n            let { type, data } = JSON.parse(e.data);\r\n            console.log(type, data);\r\n\r\n            let typeHandler = this.handlers[type];\r\n            if(typeHandler) typeHandler(data);\r\n\r\n        } catch(err) { console.log(err) }\r\n    }\r\n}","function throttle(func, ms) {\r\n    let isThrottled = false,\r\n        savedArgs,\r\n        savedThis;\r\n\r\n    function wrapper() {\r\n        if (isThrottled) {\r\n            savedArgs = arguments;\r\n            savedThis = this;\r\n            return;\r\n        }\r\n\r\n        func.apply(this, arguments);\r\n        isThrottled = true;\r\n\r\n        setTimeout(function() {\r\n            isThrottled = false;\r\n            if (savedArgs) {\r\n                wrapper.apply(savedThis, savedArgs);\r\n                savedArgs = savedThis = null;\r\n            }\r\n        }, ms);\r\n    }\r\n\r\n    return wrapper;\r\n}\r\n\r\nconst makeTrottle = (func, ms) => throttle(func, ms);\r\n\r\nexport default makeTrottle;","import throttle from './throttle';\r\n\r\nexport default class positionWatcher {\r\n    constructor(callback = () => {}) {\r\n        this.cb = callback;\r\n        this.handler = throttle(this.handler, 100);\r\n        this.lastPosition = {\r\n            top: null,\r\n            right: null,\r\n            bottom: null,\r\n            left: null\r\n        };\r\n\r\n        this.raf = null;\r\n        this.autoUpdate = false;\r\n\r\n        // window.addEventListener('resize', this.handler);\r\n        // requestAnimationFrame(() => this.handler());\r\n        // window.requestAnimationFrame(this.handler);\r\n\r\n        this.start();\r\n    }\r\n\r\n    comparePosition(position) {\r\n        let diff = false;\r\n\r\n        for(let pos in position) {\r\n            if(position[pos] !== this.lastPosition[pos]) {\r\n                diff = true;\r\n            }\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    handler = () => {\r\n        let position = {\r\n            top: window.screenY,\r\n            right: window.screenX + window.outerWidth,\r\n            bottom: window.screenY + window.outerHeight,\r\n            left: window.screenX\r\n        };\r\n\r\n        let compare = this.comparePosition(position);\r\n        // console.log('compare: ', compare);\r\n\r\n        if(compare) {\r\n            this.cb(position);\r\n            this.lastPosition = position;\r\n        }\r\n\r\n        if(this.autoUpdate) {\r\n            this.raf = window.requestAnimationFrame(() => this.handler());\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.autoUpdate = true;\r\n        this.handler();\r\n    }\r\n\r\n    stop() {\r\n        this.autoUpdate = false;\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}","import Btn from './btn';\r\n\r\nexport default Btn;","import React from 'react';\r\nimport './btn.css';\r\n\r\nconst Btn = (props) => {\r\n    const { onClick, label, disabled } = props;\r\n\r\n    return <button className=\"Btn\" onClick={onClick} disabled={disabled} >{label}</button>\r\n}\r\n\r\nexport default Btn;","import Main from './main';\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { randomName, workerHandler } from '../../services'\r\nimport './main.css';\r\n\r\nimport Btn from '../../components/btn';\r\n\r\nexport default class Main extends Component {\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'pumping:connected': () => {\r\n            this.onPumpingOpen()\r\n        },\r\n        'pumping:disconnected': () => {\r\n            this.onPumpingClose()\r\n        }\r\n    });\r\n\r\n    state = {\r\n        opened: false,\r\n        ready: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.main_state = this.state;\r\n        window.messageHandler = this.messageHandler;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.main_state = this.state;\r\n    }\r\n\r\n    onPumpingOpen = () => {\r\n        // console.log('Насос открыт');\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    }\r\n\r\n    onPumpingClose = () => {\r\n        // console.log('Насос закрыт');\r\n        this.setState({\r\n            opened: false,\r\n            ready: false\r\n        });\r\n    }\r\n\r\n    onClick = () => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n        window.open(`${DEPLOY_FOLDER}/pumping`, randomName(), 'resizable');\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { opened } = this.state;\r\n        return (\r\n            <div className=\"Main\">\r\n                <Btn onClick={this.onClick} label=\"Запустить насос\" disabled={opened}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumping from './pumping';\r\n\r\nexport default Pumping;","import React, { Component } from 'react';\r\nimport { randomName, workerHandler, positionWatcher } from '../../services'\r\n\r\nimport Btn from '../../components/btn'\r\n\r\nimport './pumping.css';\r\n\r\n// pumping_state.Pumpeds.forEach((pump, key) => console.log(key, pump))\r\n\r\nexport default class Pumping extends Component {\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'position:update': (data) => this.onChangePumped(data),\r\n        'pumped:disconnected': (data) => this.onChangePumped(data, true),\r\n    });\r\n\r\n    posWatcher = null;\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        Pumping: {},\r\n        Pumpeds: new Map(),\r\n        Plugged: new Set(),\r\n    }\r\n\r\n    collisionCalc(Pumpeds, Plugged) {\r\n        let { Pumping } = this.state;\r\n        // console.log(Pumping, Pumpeds);\r\n\r\n        Pumpeds.forEach((pumped, name) => {\r\n            let vertical = false;\r\n            let horizontal = false;\r\n\r\n            if(Pumping.top <= pumped.bottom && Pumping.bottom >= pumped.top) { vertical = true; }\r\n            if(Pumping.right >= pumped.left && Pumping.left <= pumped.right) { horizontal = true; }\r\n\r\n            if(vertical && horizontal) {\r\n                console.log('---Collision--- ', name);\r\n                \r\n                Plugged.add(name);\r\n            } else {\r\n                Plugged.delete(name);\r\n            }\r\n        });\r\n\r\n        return Plugged;\r\n    }\r\n\r\n    onChangePumped(data, del = false) {\r\n        let { target, position } = data;\r\n\r\n        if(target !== 'Pumping') {\r\n            let Pumpeds = new Map([...this.state.Pumpeds]);\r\n            let Plugged = new Set([...this.state.Plugged]);\r\n            if(del) {\r\n                Pumpeds.delete(data);\r\n                Plugged.delete(data);\r\n            } else {\r\n                Pumpeds.set(target, position);\r\n            }\r\n\r\n            Plugged = this.collisionCalc(Pumpeds, Plugged);\r\n\r\n            this.setState({\r\n                Pumpeds,\r\n                Plugged\r\n            });\r\n        }\r\n    }\r\n\r\n    openPumped = () => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n\r\n        setTimeout(() => {\r\n            let name = randomName();\r\n            window.open(`${DEPLOY_FOLDER}/pumped`, name, 'resizable');\r\n        }, 100);\r\n    }\r\n\r\n    onPosition(position) {\r\n        this.messageHandler.message('position:update', {target: 'Pumping', position});\r\n        let Plugged = new Set([...this.state.Plugged]);\r\n        // Plugged = this.collisionCalc(Pumpeds, Plugged);\r\n        this.setState({\r\n            Pumping: position\r\n        });\r\n    }\r\n\r\n    onClose = () => {\r\n        this.closeAllPumpeds();\r\n\r\n        this.messageHandler.message('pumping:disconnected');\r\n    }\r\n\r\n    closeAllPumpeds = () => {\r\n        this.messageHandler.message('pumped:closeAll');\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.pumping_state = this.state;\r\n\r\n        let lastTitle = document.title;\r\n        document.title = 'Насос';\r\n\r\n        this.setState({\r\n            lastTitle\r\n        });\r\n\r\n        // this.openPumped();\r\n\r\n        window.addEventListener('beforeunload', this.onClose);\r\n        this.messageHandler.message('pumping:connected');\r\n\r\n        this.posWatcher = new positionWatcher(pos => this.onPosition(pos));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.pumping_state = this.state;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = this.state.lastTitle;\r\n\r\n        this.posWatcher && this.posWatcher.stop();\r\n    }\r\n    \r\n    render() {\r\n        const { Pumping, Plugged } = this.state;\r\n        let posiSpans = Object.keys(Pumping).map(pos => <div key={pos}>{ pos }: { Pumping[pos] }</div>);\r\n        let plugged = [...Plugged].map(plug => <div key={plug}>{ plug }</div>);\r\n\r\n        return (\r\n            <div className=\"Pumping\">\r\n                <div>Pumping</div>\r\n                <hr/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">{posiSpans}</div>\r\n                    <div className=\"col\">\r\n                        Plugged\r\n                        <hr/>\r\n                        { plugged }\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <Btn onClick={this.closeAllPumpeds} label=\"Закрыть шарики\"></Btn>\r\n                <br />\r\n                <br />\r\n                <Btn onClick={this.openPumped} label=\"Открыть шарик\"></Btn>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumped from './pumped';\r\n\r\nexport default Pumped;","import React, { Component } from 'react';\r\nimport { workerHandler, positionWatcher } from '../../services'\r\n\r\nimport './pumped.css';\r\n\r\nexport default class Pumped extends Component{\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'pumped:close': (data) => {\r\n            if(window.name === data) {\r\n                window.close();\r\n            }\r\n        },\r\n        'pumped:closeAll': () => {\r\n            window.close();\r\n        }\r\n    });\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        position: {}\r\n    }\r\n\r\n    onPosition(position) {\r\n        this.messageHandler.message('position:update', {target: window.name, position});\r\n        this.setState({\r\n            position\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.messageHandler.message('pumped:disconnected', window.name);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastTitle = document.title;\r\n        document.title = 'Шарик';\r\n\r\n        window.addEventListener('beforeunload', this.onClose);\r\n\r\n        this.messageHandler.message('pumped:connected', window.name);\r\n\r\n        new positionWatcher(pos => this.onPosition(pos));\r\n\r\n        this.setState({\r\n            lastTitle\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = this.state.lastTitle;\r\n    }\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n        let posiSpans = Object.keys(position).map(pos => <div key={pos}>{ pos }: { position[pos] }</div>)\r\n\r\n        return (\r\n            <div className=\"Pumped\">\r\n                <div>Pumped: {window.name}</div>\r\n                <hr/>\r\n                {posiSpans}\r\n            </div>\r\n        )\r\n    }\r\n}","import App from './app'\r\n\r\nexport default App","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Main from '../../pages/main';\nimport Pumping from '../../pages/pumping';\nimport Pumped from '../../pages/pumped';\n\nimport './app.css';\n\nconst App = () => {\n    const { REACT_APP_DEPLOY_FOLDER } = process.env;\n    \n    return (\n        <div className=\"App\" >\n            <Router basename={REACT_APP_DEPLOY_FOLDER}>\n                <Route path={`/`} component={ Main } exact/>\n\n                <Route path={`/pumping`} component={ Pumping }/>\n\n                <Route path={`/pumped`} component={ Pumped }/>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render( <App / > , document.getElementById('root'));"],"sourceRoot":""}