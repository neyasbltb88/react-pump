{"version":3,"sources":["services/rand.js","services/random-name.js","services/worker-handler.js","services/throttle.js","services/position-watcher.js","components/btn/index.js","components/btn/btn.js","pages/main/index.js","pages/main/main.js","pages/pumping/index.js","pages/pumping/pumping.js","pages/pumped/index.js","pages/pumped/pumped.js","components/app/index.js","components/app/app.js","index.js"],"names":["rand","min","max","Math","floor","random","randomName","length","name","i","String","fromCharCode","workerHandler","worker","handlers","message","type","data","port","postMessage","JSON","stringify","handler","e","parse","typeHandler","err","console","log","this","addEventListener","start","makeTrottle","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","apply","setTimeout","throttle","positionWatcher","callback","position","top","window","screenY","right","screenX","outerWidth","bottom","outerHeight","left","comparePosition","cb","lastPosition","autoUpdate","raf","requestAnimationFrame","diff","pos","cancelAnimationFrame","Btn","props","onClick","label","disabled","className","Main","SharedWorker","messageHandler","onChangePumpingConnected","state","opened","pumpingLeft","screen","availWidth","width","pumpingWidth","pumpingTop","availHeight","height","pumpingHeight","pumpingParams","open","setState","main_state","value","Component","Pumping","onPositionUpdate","onDisconnectedPumped","focus","autoOpenPumpeds","lastTitle","pumpedSize","autoOpen","lastPumpHeight","connectedSide","pumpRatio","Pumpeds","Map","Plugged","onClose","closeAllPumpeds","openPumped","params","w","h","winParams","side","has","get","set","target","delete","sides","forEach","pumped","vertical","horizontal","onPlug","onUnplug","collisionCalc","openedCnt","pumpedParams","msg","delta","abs","ratio","onPump","pumping_state","document","title","posWatcher","onPosition","stop","posiSpans","Object","keys","map","key","plugged","plug","pluggedCnt","size","sidesContent","sideConnect","Pumped","close","onChangePlug","plagged","onPumpDown","runResize","need","smoothResize","resizeBy","moveBy","pluggedMark","App","basename","process","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7a36bd09.chunk.js","sourcesContent":["const rand = (min, max) => {\r\n    let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n    return rand;\r\n}\r\n\r\nexport default rand;","import rand from './rand'\r\n\r\nconst randomName = (length = 10) => {\r\n    let name = '';\r\n    for (let i = 0; i < length; i++) {\r\n        name += String.fromCharCode(rand(97, 122));\r\n    }\r\n\r\n    return name;\r\n}\r\n\r\nexport default randomName;","export default class workerHandler {\r\n    constructor(worker, handlers) {\r\n        this.worker = worker;\r\n        this.handlers = handlers;\r\n\r\n        this.worker.port.addEventListener('message', this.handler, false);\r\n        this.worker.port.start();\r\n    }\r\n\r\n    message = (type, data) => {\r\n        this.worker.port.postMessage(JSON.stringify({ type, data }));\r\n    }\r\n\r\n    handler = (e) => {\r\n        try {\r\n            let { type, data } = JSON.parse(e.data);\r\n            if(type !== 'position:update') {\r\n                // console.log(type, data);\r\n            }\r\n            \r\n\r\n            let typeHandler = this.handlers[type];\r\n            if(typeHandler) typeHandler(data);\r\n\r\n        } catch(err) { console.log(err) }\r\n    }\r\n}","function throttle(func, ms) {\r\n    let isThrottled = false,\r\n        savedArgs,\r\n        savedThis;\r\n\r\n    function wrapper() {\r\n        if (isThrottled) {\r\n            savedArgs = arguments;\r\n            savedThis = this;\r\n            return;\r\n        }\r\n\r\n        func.apply(this, arguments);\r\n        isThrottled = true;\r\n\r\n        setTimeout(function() {\r\n            isThrottled = false;\r\n            if (savedArgs) {\r\n                wrapper.apply(savedThis, savedArgs);\r\n                savedArgs = savedThis = null;\r\n            }\r\n        }, ms);\r\n    }\r\n\r\n    return wrapper;\r\n}\r\n\r\nconst makeTrottle = (func, ms) => throttle(func, ms);\r\n\r\nexport default makeTrottle;","import throttle from './throttle';\r\n\r\nexport default class positionWatcher {\r\n    constructor(callback = () => {}) {\r\n        this.cb = callback;\r\n        this.handler = throttle(this.handler, 50);\r\n        this.lastPosition = {\r\n            top: null,\r\n            right: null,\r\n            bottom: null,\r\n            left: null\r\n        };\r\n\r\n        this.raf = null;\r\n        this.autoUpdate = false;\r\n\r\n        this.start();\r\n    }\r\n\r\n    comparePosition(position) {\r\n        let diff = false;\r\n\r\n        for(let pos in position) {\r\n            if(position[pos] !== this.lastPosition[pos]) {\r\n                diff = true;\r\n            }\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    handler = () => {\r\n        let position = {\r\n            top: window.screenY,\r\n            right: window.screenX + window.outerWidth,\r\n            bottom: window.screenY + window.outerHeight,\r\n            left: window.screenX\r\n        };\r\n\r\n        let compare = this.comparePosition(position);\r\n        if(compare) {\r\n            this.cb(position);\r\n            this.lastPosition = position;\r\n        }\r\n\r\n        if(this.autoUpdate) {\r\n            this.raf = window.requestAnimationFrame(() => this.handler());\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.autoUpdate = true;\r\n        this.handler();\r\n    }\r\n\r\n    stop() {\r\n        this.autoUpdate = false;\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}","import Btn from './btn';\r\n\r\nexport default Btn;","import React from 'react';\r\nimport './btn.css';\r\n\r\nconst Btn = (props) => {\r\n    const { onClick, label, disabled } = props;\r\n\r\n    return <button className=\"Btn\" onClick={onClick} disabled={disabled} >{label}</button>\r\n}\r\n\r\nexport default Btn;","import Main from './main';\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { randomName, workerHandler } from '../../services'\r\nimport './main.css';\r\n\r\nimport Btn from '../../components/btn';\r\n\r\nexport default class Main extends Component {\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'pumping:connected': () => {\r\n            this.onChangePumpingConnected(true);\r\n        },\r\n        'pumping:disconnected': () => {\r\n            this.onChangePumpingConnected(false);\r\n        },\r\n        'status:pumping': (data) => {\r\n            this.onChangePumpingConnected(data);\r\n        }\r\n    });\r\n\r\n    state = {\r\n        opened: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.main_state = this.state;\r\n        window.messageHandler = this.messageHandler;\r\n\r\n        this.messageHandler.message('checkStatus:pumping');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.main_state = this.state;\r\n    }\r\n\r\n    onChangePumpingConnected(value) {\r\n        this.setState({\r\n            opened: value\r\n        });\r\n    }\r\n\r\n    onClick = () => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n\r\n        let pumpingWidth = 300;\r\n        let pumpingHeight = 550;\r\n        let screenWidth = window.screen.availWidth || window.screen.width;\r\n        let screenHeight = window.screen.availHeight || window.screen.height;\r\n\r\n        let pumpingLeft = (screenWidth / 2 ) - (pumpingWidth / 2);\r\n        let pumpingTop = (screenHeight / 2 ) - (pumpingHeight / 2);\r\n\r\n        let pumpingParams = `resizable,width=${pumpingWidth},height=${pumpingHeight},left=${pumpingLeft},top=${pumpingTop},location=no,status=no,scrollbars=no,toolbar=no,menubar=no`;\r\n\r\n        window.open(`${DEPLOY_FOLDER}/pumping`, randomName(), pumpingParams);\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { opened } = this.state;\r\n        let label = opened ? 'Насос запущен' : 'Запустить насос';\r\n\r\n        return (\r\n            <div className=\"Main\">\r\n                <Btn onClick={this.onClick} label={ label } disabled={ opened }/>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumping from './pumping';\r\n\r\nexport default Pumping;","import React, { Component } from 'react';\r\nimport { rand, randomName, workerHandler, positionWatcher } from '../../services'\r\n\r\nimport Btn from '../../components/btn'\r\n\r\nimport './pumping.css';\r\n\r\nexport default class Pumping extends Component {\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'position:update': (data) => this.onPositionUpdate(data),\r\n        'pumped:disconnected': (data) => this.onDisconnectedPumped(data),\r\n        'pumped:connected': () => {\r\n            window.focus();\r\n            this.messageHandler.message('checkStatus:pumpeds');\r\n        },\r\n        'status:pumpeds': (data) => this.autoOpenPumpeds(data),\r\n    });\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        pumpedSize: 300,\r\n        autoOpen: true,\r\n        lastPumpHeight: null,\r\n        connectedSide: {\r\n            left: false,\r\n            right: false\r\n        },\r\n        pumpRatio: 10,\r\n        Pumping: {}, // Положение насоса\r\n        Pumpeds: new Map(), // Список шариков с их положениями\r\n        Plugged: new Map(), // Коллекция подключенных шариков\r\n    }\r\n\r\n    // Подключает шарик к насосу\r\n    onPlug(name, side) {\r\n        side = ( side === 'left' ) ? 'right' : 'left';\r\n\r\n        this.setState(state => {\r\n            let Plugged = new Map([...state.Plugged]);\r\n\r\n            // Если шарик еще не был подключен, подключаем и ведомляем\r\n            if(!Plugged.has(name) || Plugged.get(name) !== side) {\r\n                Plugged.set(name, side);\r\n                this.messageHandler.message('pumped:plugged', {\r\n                    target: name,\r\n                    side\r\n                });\r\n            } \r\n            \r\n            return { Plugged };\r\n        });\r\n    }\r\n\r\n    // Отключает шарик от насоса\r\n    onUnplug(name) {\r\n        this.setState(state => {\r\n            let Plugged = new Map([...state.Plugged]);\r\n\r\n            // Если delete вернет true, значит шарик был подключен, \r\n            // а теперь отключился, значит уведомляем\r\n            if(Plugged.delete(name)) {\r\n                this.messageHandler.message('pumped:unplugged', name);\r\n            } \r\n            \r\n            return { Plugged };\r\n        });\r\n    }\r\n\r\n    // Рассчитывает столкновения(подключения) насоса и шариков\r\n    collisionCalc(target, position) {\r\n        let Pumping = null;\r\n        let Pumpeds = new Map([...this.state.Pumpeds]);\r\n        let sides = {\r\n            left: false,\r\n            right: false\r\n        }\r\n\r\n        // Если изменилось положение насоса\r\n        if(target === 'Pumping') {\r\n            // Запомним новое положение насоса\r\n            Pumping = position;\r\n\r\n        // Если изменилось положение шарика\r\n        } else {\r\n            // Получим положение насоса\r\n            Pumping = {...this.state.Pumping};\r\n            // Обновим изменившееся положение шарика\r\n            Pumpeds.set(target, position);\r\n        }\r\n\r\n        // Сверяем положение насоса с шариками\r\n        Pumpeds.forEach((pumped, name) => {\r\n            let vertical = false;\r\n            let horizontal = false;\r\n\r\n            if(Pumping.top <= pumped.bottom && Pumping.bottom >= pumped.top) { vertical = true; }\r\n            if(Pumping.left <= pumped.right && Pumping.right >= pumped.left) { horizontal = true; }\r\n\r\n            if(vertical && horizontal) {\r\n                let pumpingCenter = ((Pumping.right - Pumping.left) / 2) + Pumping.left;\r\n                let pumpedCenter = ((pumped.right - pumped.left) / 2) + pumped.left;\r\n\r\n                let side = ( (pumpingCenter - pumpedCenter) > 0 ) ? 'left' : 'right';\r\n                sides[side] = true;\r\n                this.onPlug(name, side);\r\n            } else {\r\n                this.onUnplug(name);\r\n            }\r\n        });\r\n\r\n        // Сохраним изменения положений\r\n        this.setState({\r\n            connectedSide: sides,\r\n            Pumping,\r\n            Pumpeds\r\n        });\r\n    }\r\n\r\n    // Обрабатывает дисконнект шарика\r\n    onDisconnectedPumped(data) {\r\n        let Pumpeds = new Map([...this.state.Pumpeds]);\r\n        Pumpeds.delete(data);\r\n        this.onUnplug(data);\r\n\r\n        this.setState({\r\n            Pumpeds\r\n        });\r\n    }\r\n\r\n    // Обрабатывает изменение размеров/позиций насоса и шариков\r\n    onPositionUpdate(data) {\r\n        let { target, position } = data;\r\n        this.collisionCalc(target, position);\r\n    }\r\n\r\n    // Обрабатывает закрытие окна насоса\r\n    onClose = () => {\r\n        this.closeAllPumpeds();\r\n\r\n        this.messageHandler.message('pumping:disconnected');\r\n    }\r\n\r\n    // Отправляет команду закрытия всех шариков\r\n    closeAllPumpeds = () => {\r\n        this.messageHandler.message('pumped:closeAll');\r\n    }\r\n\r\n    // Открывает новый шарик\r\n    openPumped = (params) => {\r\n        const { REACT_APP_DEPLOY_FOLDER } = process.env;\r\n        const DEPLOY_FOLDER = REACT_APP_DEPLOY_FOLDER ? '/' + REACT_APP_DEPLOY_FOLDER : '';\r\n\r\n        let { pumpedSize } = this.state;\r\n        let screenWidth = window.screen.availWidth || window.screen.width;\r\n        let screenHeight = window.screen.availHeight || window.screen.height;\r\n\r\n        let w = screenWidth - pumpedSize;\r\n        let h = screenHeight - pumpedSize;\r\n\r\n        let winParams = params ? params : `resizable,width=${pumpedSize},height=${pumpedSize},left=${rand(0, w)},top=${rand(0, h)}`;\r\n\r\n        setTimeout(() => {\r\n            let name = randomName();\r\n            window.open(`${DEPLOY_FOLDER}/pumped`, name, winParams);\r\n        }, 0);\r\n    }\r\n\r\n    // Автоматически открывает 2 шарика слева и справа от насоса\r\n    autoOpenPumpeds(openedCnt) {\r\n        if(!this.state.autoOpen) return;\r\n\r\n        let { top, right, bottom, left } = this.state.Pumping;\r\n        let { pumpedSize } = this.state;\r\n\r\n        let pumpedParams = [\r\n            `resizable,width=${pumpedSize},height=${pumpedSize},left=${left - pumpedSize + 15},top=${top + (bottom / 2) - (pumpedSize / 2)}`,\r\n            `resizable,width=${pumpedSize},height=${pumpedSize},left=${right - 15},top=${top + (bottom / 2) - (pumpedSize / 2)}`\r\n        ];\r\n\r\n        if(pumpedParams[openedCnt]) {\r\n            this.openPumped(pumpedParams[openedCnt]);\r\n        } else {\r\n            this.setState({\r\n                autoOpen: false\r\n            });\r\n        }\r\n    }\r\n\r\n    // Обработчик накачивания\r\n    onPump(position) {\r\n        let { lastPumpHeight, pumpRatio } = this.state;\r\n        let height = position.bottom - position.top;\r\n\r\n        // Проверка на null для того, чтобы не сработало само после старта\r\n        if(lastPumpHeight !== null && lastPumpHeight !== height) {\r\n            let msg = (lastPumpHeight < height) ? 'pump:up' : 'pump:down';\r\n            let delta = Math.abs(lastPumpHeight - height);\r\n\r\n            // Оповещаем о накачивании, передаем величину накачки и коэффициент\r\n            this.messageHandler.message(msg, {\r\n                delta,\r\n                ratio: pumpRatio\r\n            });\r\n        }\r\n        \r\n        return height;\r\n    }\r\n\r\n    // Обрабатывает изменение положения насоса\r\n    onPosition(position) {\r\n        this.messageHandler.message('position:update', {target: 'Pumping', position});\r\n\r\n        let lastPumpHeight = this.onPump(position);\r\n\r\n        this.setState({\r\n            lastPumpHeight,\r\n            Pumping: position\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.pumping_state = this.state;\r\n\r\n        let lastTitle = document.title;\r\n        document.title = 'Насос';\r\n\r\n        this.setState({\r\n            lastTitle\r\n        });\r\n\r\n        window.addEventListener('beforeunload', this.onClose);\r\n        this.messageHandler.message('pumping:connected');\r\n\r\n        this.posWatcher = new positionWatcher(pos => this.onPosition(pos));\r\n\r\n        // Запрос количества открытых шариков\r\n        this.messageHandler.message('checkStatus:pumpeds');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.pumping_state = this.state;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = this.state.lastTitle;\r\n        this.posWatcher && this.posWatcher.stop();\r\n    }\r\n    \r\n    render() {\r\n        const { Pumping, Plugged, connectedSide } = this.state;\r\n        let posiSpans = Object.keys(Pumping).map(pos => <div key={pos}>{ pos }: { Pumping[pos] }</div>);\r\n        let plugged = [...Plugged.keys()].map(plug => <div key={plug}>{ plug }</div>);\r\n        let pluggedCnt = Plugged.size ? <span className=\"text-primary\">({ Plugged.size })</span> : null;\r\n\r\n        let sidesContent = {\r\n            'left': '<--',\r\n            'right': '-->'\r\n        };\r\n        // let sideConnect = (side !== '') ? <div className={`connect-${side} text-primary`}>{ sidesContent[side] }</div> : null;\r\n\r\n        let sideConnect = Object.keys(connectedSide).map(side => {\r\n            if(connectedSide[side]) {\r\n                return <div key={side} className={`connect-${side} text-primary`}>{ sidesContent[side] }</div>\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"Pumping\">\r\n                <div className=\"header\">\r\n                    Pumping\r\n                    { sideConnect }\r\n                </div>\r\n                <hr/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col\">{posiSpans}</div>\r\n                    <div className=\"col\">\r\n                        Plugged { pluggedCnt }\r\n                        <hr/>\r\n                        { plugged }\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <Btn onClick={this.closeAllPumpeds} label=\"Закрыть шарики\"></Btn>\r\n                <br />\r\n                <br />\r\n                <Btn onClick={() => this.openPumped()} label=\"Открыть шарик\"></Btn>\r\n            </div>\r\n        )\r\n    }\r\n}","import Pumped from './pumped';\r\n\r\nexport default Pumped;","import React, { Component } from 'react';\r\nimport { workerHandler, positionWatcher } from '../../services'\r\n\r\nimport './pumped.css';\r\n\r\nexport default class Pumped extends Component{\r\n\r\n    worker = new SharedWorker('./services/worker.js');\r\n\r\n    messageHandler = new workerHandler(this.worker, {\r\n        'pumped:close': (name) => {\r\n            if(window.name === name) window.close();\r\n        },\r\n        'pumped:closeAll': () => {\r\n            window.close();\r\n        },\r\n        'pumped:plugged': (data) => {\r\n            let { target, side } = data;\r\n            if(window.name === target) this.onChangePlug(true, side);\r\n        },\r\n        'pumped:unplugged': (name) => {\r\n            if(window.name === name) this.onChangePlug(false);\r\n        },\r\n        'pump:down': ({delta, ratio}) => {\r\n            if(this.state.plagged) this.onPumpDown(delta, ratio);\r\n        }\r\n    });\r\n\r\n    state = {\r\n        lastTitle: '',\r\n        position: {},\r\n        plagged: false,\r\n        side: '',\r\n        delta: 0,\r\n        ratio: 1,\r\n        runResize: false,\r\n    }\r\n\r\n    runResize = (need) => {\r\n        requestAnimationFrame(() => this.smoothResize(need));\r\n    }\r\n\r\n    smoothResize = (need) => {\r\n        let { delta, runResize } = this.state;\r\n        if(runResize && !need) return;\r\n\r\n        console.log('smoothResize');\r\n        \r\n\r\n        let step = 2;\r\n        let move = -step / 2;\r\n\r\n        delta = delta - step;\r\n\r\n        window.resizeBy(step, step);\r\n            window.moveBy(move, move);\r\n\r\n        if(delta > 0) {\r\n            runResize = true;\r\n            this.runResize(true);\r\n        } else {\r\n            delta = 0;\r\n            runResize = false;\r\n        }\r\n\r\n        this.setState({\r\n            delta,\r\n            runResize\r\n        });\r\n    }\r\n\r\n    // onPumpDown(delta, ratio = 1) {\r\n    //     let step = delta / ratio;\r\n    //     let move = -step / 2;\r\n        \r\n    //     window.resizeBy(step, step);\r\n    //     window.moveBy(move, move);\r\n    // }\r\n\r\n    onPumpDown(delta, ratio = 1) {        \r\n        this.setState(state => {\r\n            this.runResize();\r\n\r\n            return {\r\n                delta: state.delta + ( delta / ratio),\r\n                ratio,\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangePlug(value, side = '') {\r\n        this.setState({\r\n            plagged: value,\r\n            side\r\n        });\r\n    }\r\n\r\n    onPosition(position) {\r\n        this.messageHandler.message('position:update', {target: window.name, position});\r\n        this.setState({\r\n            position\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.messageHandler.message('pumped:disconnected', window.name);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lastTitle = document.title;\r\n        document.title = 'Шарик';\r\n\r\n        window.addEventListener('beforeunload', this.onClose);\r\n\r\n        this.messageHandler.message('pumped:connected', window.name);\r\n\r\n        this.posWatcher = new positionWatcher(pos => this.onPosition(pos));\r\n\r\n        this.setState({\r\n            lastTitle\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = this.state.lastTitle;\r\n\r\n        this.posWatcher && this.posWatcher.stop();\r\n    }\r\n\r\n    render() {\r\n        const { position, plagged, side } = this.state;\r\n        let posiSpans = Object.keys(position).map(pos => <div key={pos}>{ pos }: { position[pos] }</div>);\r\n        let pluggedMark = plagged ? <span className=\"text-primary\">(Plugged)</span> : null;\r\n        let sidesContent = {\r\n            'left': '<-',\r\n            'right': '->'\r\n        };\r\n        let sideConnect = (side !== '') ? <div className={`connect-${side} text-primary`}>{ sidesContent[side] }</div> : null;\r\n\r\n        return (\r\n            <div className=\"Pumped\">\r\n                <div className=\"header\">Pumped: {window.name} { pluggedMark }\r\n                { sideConnect }\r\n                </div>\r\n                <hr/>\r\n                {posiSpans}\r\n            </div>\r\n        )\r\n    }\r\n}","import App from './app'\r\n\r\nexport default App","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Main from '../../pages/main';\nimport Pumping from '../../pages/pumping';\nimport Pumped from '../../pages/pumped';\n\nimport './app.css';\n\nconst App = () => {\n    const { REACT_APP_DEPLOY_FOLDER } = process.env;\n    \n    return (\n        <div className=\"App\" >\n            <Router basename={REACT_APP_DEPLOY_FOLDER}>\n                <Route path={`/`} component={ Main } exact/>\n\n                <Route path={`/pumping`} component={ Pumping }/>\n\n                <Route path={`/pumped`} component={ Pumped }/>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render( <App / > , document.getElementById('root'));"],"sourceRoot":""}